service: fake-token-generator
#app: your-app-name
#tenant: your-tenant-name

plugins:
# Add the serverless-webpack plugin
  - serverless-webpack
#- serverless-layers
custom:
  webpack:
    webpackConfig: 'webpack.config.nestjs.js' # Name of webpack configuration file
    includeModules: false # Node modules configuration for packaging
    packager: 'npm' # Packager that will be used to package your external modules
    excludeFiles: src/**/*.test.js # Provide a glob for files to ignore

provider:
  name: aws
  runtime: nodejs18.x
  stage: ${opt:stage, 'prod'}
  region: ap-northeast-1
  profile: faker
  environment:
    TZ: 'Asia/Seoul'
    NODE_OPTIONS: '--enable-source-maps'
    STAGE_ENV: ${opt:stage, 'prod'}
    NODE_ENV: ${opt:stage, 'prod'}
    #CONFIG_ENV: ${file(../config.${self:provider.stage}.json):CREDS}
  memorySize: 1024 # optional, in MB, default is 1024
  timeout: 5 # optional, in seconds, default is 6
  architecture: arm64 # Processor architecture: 'x86_64' or 'arm64' via Graviton2 (default: x86_64)
  vpc:
    securityGroupIds:
      - sg-09fa06cc84e984e08
    subnetIds:
      - subnet-0c6184ab804353529
  apiGateway:
    binaryMediaTypes:
      - 'image/jpeg'
      - 'image/png'
      - 'multipart/form-data'
      - 'text/html'
  tracing:
    lambda: true
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'ec2:CreateNetworkInterface'
        - 'ec2:DescribeNetworkInterfaces'
        - 'ec2:DetachNetworkInterface'
        - 'ec2:DeleteNetworkInterface'
      Resource: '*'
    - Effect: "Allow"
      Action:
        - 's3:ListBucket'
        - 's3:PutObject'
      Resource: '*'

package:
  exclude:
    - ./**
    - .git/**
    - src/**
    - node_modules/@types/*
    - test/**
    - nodemon.json
    - README.md
  include:
    - dist/**
    - node_modules/**
  excludeDevDependencies: true

functions:
  endpoint:
    handler: dist/src/token-generator/lambda.handler
    events:
      - http:
          method: any
          path: /
          cors: true
          integration: lambda-proxy
      - http:
          method: any
          path: /{proxy+}
          cors: true
          integration: lambda-proxy
